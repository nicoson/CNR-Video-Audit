package cn.qiniu.mapper;

import cn.qiniu.entity.ReviewTaskState;
import cn.qiniu.entity.ReviewTaskStateExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface ReviewTaskStateMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table review_task_state
     *
     * @mbggenerated
     */
    int countByExample(ReviewTaskStateExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table review_task_state
     *
     * @mbggenerated
     */
    int deleteByExample(ReviewTaskStateExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table review_task_state
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `review_task_state`",
        "where `id` = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table review_task_state
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `review_task_state` (`id`, `job_id`, ",
        "`time_created`, `time_done`, ",
        "`created_by`, `created_at`, ",
        "`updated_by`, `updated_at`, ",
        "`del_flg`)",
        "values (#{id,jdbcType=VARCHAR}, #{jobId,jdbcType=VARCHAR}, ",
        "#{timeCreated,jdbcType=INTEGER}, #{timeDone,jdbcType=INTEGER}, ",
        "#{createdBy,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, ",
        "#{updatedBy,jdbcType=VARCHAR}, #{updatedAt,jdbcType=TIMESTAMP}, ",
        "#{delFlg,jdbcType=VARCHAR})"
    })
    int insert(ReviewTaskState record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table review_task_state
     *
     * @mbggenerated
     */
    int insertSelective(ReviewTaskState record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table review_task_state
     *
     * @mbggenerated
     */
    List<ReviewTaskState> selectByExample(ReviewTaskStateExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table review_task_state
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "`id`, `job_id`, `time_created`, `time_done`, `created_by`, `created_at`, `updated_by`, ",
        "`updated_at`, `del_flg`",
        "from `review_task_state`",
        "where `id` = #{id,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    ReviewTaskState selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table review_task_state
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") ReviewTaskState record, @Param("example") ReviewTaskStateExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table review_task_state
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") ReviewTaskState record, @Param("example") ReviewTaskStateExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table review_task_state
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(ReviewTaskState record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table review_task_state
     *
     * @mbggenerated
     */
    @Update({
        "update `review_task_state`",
        "set `job_id` = #{jobId,jdbcType=VARCHAR},",
          "`time_created` = #{timeCreated,jdbcType=INTEGER},",
          "`time_done` = #{timeDone,jdbcType=INTEGER},",
          "`created_by` = #{createdBy,jdbcType=VARCHAR},",
          "`created_at` = #{createdAt,jdbcType=TIMESTAMP},",
          "`updated_by` = #{updatedBy,jdbcType=VARCHAR},",
          "`updated_at` = #{updatedAt,jdbcType=TIMESTAMP},",
          "`del_flg` = #{delFlg,jdbcType=VARCHAR}",
        "where `id` = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(ReviewTaskState record);
}